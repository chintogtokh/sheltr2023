name: 2. Build backend and move to ECR
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod
    name: Build Image
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        working-directory: ./backend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sheltr_repo
          IMAGE_TAG: latest
          MONGO_DBHOST: "pztest-db.chintogtokh.com"
          MONGO_DBPORT: "27017"
          MONGO_DBNAME: "sheltr"
          MONGO_DBUSER: ${{ secrets.MONGO_DBUSER }}
          MONGO_DBPASS: ${{ secrets.MONGO_DBPASS }}
          MONGO_JWTSECRET: "dummysecret"
        run: |
          echo "MONGO_JWTSECRET:$MONGO_JWTSECRET\nMONGO_DBHOST:$MONGO_DBHOST\nMONGO_DBPORT:$MONGO_DBPORT\nMONGO_DBNAME:$MONGO_DBNAME\nMONGO_DBUSER:$MONGO_DBUSER\nMONGO_DBPASS:$MONGO_DBPASS" > .env
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
